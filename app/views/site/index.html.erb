<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Tim Hall</title>
    <!-- <link rel="shortcut icon" href="favicon.ico" /> -->

    <!-- Bootstrap Core CSS - Uses Bootswatch Flatly Theme: http://bootswatch.com/flatly/ -->
    <!-- <link href="css/bootstrap.min.css" rel="stylesheet"> -->

    <!-- Custom CSS -->
    <!-- <link href="css/freelancer.css" rel="stylesheet"> -->

    <!-- Custom Fonts -->
    <!-- <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css"> -->
    <!-- <link href="http://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css"> -->
    <!-- <link href="http://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic" rel="stylesheet" type="text/css"> -->

    <style>
        /*!
         * Start Bootstrap - Freelancer Bootstrap Theme (http://startbootstrap.com)
         * Code licensed under the Apache License v2.0.
         * For details, see http://www.apache.org/licenses/LICENSE-2.0.
         */

        body {
            overflow-x: hidden;
        }

        p {
            font-size: 20px;
        }

        p.small {
            font-size: 16px;
        }

        a,
        a:hover,
        a:focus,
        a:active,
        a.active {
            outline: 0;
            color: #18bc9c;
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            text-transform: uppercase;
            font-family: Montserrat,"Helvetica Neue",Helvetica,Arial,sans-serif;
            font-weight: 700;
        }

        hr.star-light,
        hr.star-primary {
            margin: 25px auto 30px;
            padding: 0;
            max-width: 250px;
            border: 0;
            border-top: solid 5px;
            text-align: center;
        }

        hr.star-light:after,
        hr.star-primary:after {
            content: "\f005";
            display: inline-block;
            position: relative;
            top: -.8em;
            padding: 0 .25em;
            font-family: FontAwesome;
            font-size: 2em;
        }

        hr.star-light {
            border-color: #fff;
        }

        hr.star-light:after {
            color: #fff;
            background-color: #8aacb8;
        }

        hr.star-primary {
            border-color: #2c3e50;
        }

        hr.star-primary:after {
            color: #2c3e50;
            background-color: #fff;
        }

        .img-centered {
            margin: 0 auto;
        }

        header {
            text-align: center;
            color: #fff;
            /*background: #18bc9c;*/
            background: #8aacb8;

        }

        header .container {
            padding-top: 100px;
            padding-bottom: 50px;
        }

        header img {
            display: block;
            margin: 0 auto 20px;
        }

        header .intro-text .name {
            display: block;
            text-transform: uppercase;
            font-family: Montserrat,"Helvetica Neue",Helvetica,Arial,sans-serif;
            font-size: 2em;
            font-weight: 700;
        }

        header .intro-text .skills {
            font-size: 1.25em;
            font-weight: 300;
        }

        @media(min-width:768px) {
            header .container {
                padding-top: 200px;
                padding-bottom: 100px;
            }

            header .intro-text .name {
                font-size: 4.75em;
            }

            header .intro-text .skills {
                font-size: 1.75em;
            }
        }

        @media(min-width:768px) {
            .navbar-fixed-top {
                padding: 25px 0;
                -webkit-transition: padding .3s;
                -moz-transition: padding .3s;
                transition: padding .3s;
            }

            .navbar-fixed-top .navbar-brand {
                font-size: 2em;
                -webkit-transition: all .3s;
                -moz-transition: all .3s;
                transition: all .3s;
            }

            .navbar-fixed-top.navbar-shrink {
                padding: 10px 0;
            }

            .navbar-fixed-top.navbar-shrink .navbar-brand {
                font-size: 1.5em;
            }
        }

        .navbar {
            text-transform: uppercase;
            font-family: Montserrat,"Helvetica Neue",Helvetica,Arial,sans-serif;
            font-weight: 700;
        }

        .navbar a:focus {
            outline: 0;
        }

        .navbar .navbar-nav {
            letter-spacing: 1px;
        }

        .navbar .navbar-nav li a:focus {
            outline: 0;
        }

        .navbar-default,
        .navbar-inverse {
            border: 0;
        }

        section {
            padding: 100px 0;
        }

        section h2 {
            margin: 0;
            font-size: 3em;
        }

        section.success {
            color: #fff;
            /*background: #18bc9c;*/
            background: #8aacb8;
        }

        section.success a,
        section.success a:hover,
        section.success a:focus,
        section.success a:active,
        section.success a.active {
            outline: 0;
            color: #2c3e50;
        }

        @media(max-width:767px) {
            section {
                padding: 75px 0;
            }

            section.first {
                padding-top: 75px;
            }
        }

        #portfolio .portfolio-item {
            right: 0;
            margin: 0 0 15px;
        }

        #portfolio .portfolio-item .portfolio-link {
            display: block;
            position: relative;
            margin: 0 auto;
            max-width: 400px;
        }

        #portfolio .portfolio-item .portfolio-link .caption {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0;
            background: rgba(24,188,156,.9);
            -webkit-transition: all ease .5s;
            -moz-transition: all ease .5s;
            transition: all ease .5s;
        }

        #portfolio .portfolio-item .portfolio-link .caption:hover {
            opacity: 1;
        }

        #portfolio .portfolio-item .portfolio-link .caption .caption-content {
            position: absolute;
            top: 50%;
            width: 100%;
            height: 20px;
            margin-top: -12px;
            text-align: center;
            font-size: 20px;
            color: #fff;
        }

        #portfolio .portfolio-item .portfolio-link .caption .caption-content i {
            margin-top: -12px;
        }

        #portfolio .portfolio-item .portfolio-link .caption .caption-content h3,
        #portfolio .portfolio-item .portfolio-link .caption .caption-content h4 {
            margin: 0;
        }

        #portfolio * {
            z-index: 2;
        }

        @media(min-width:767px) {
            #portfolio .portfolio-item {
                margin: 0 0 30px;
            }
        }

        .btn-outline {
            margin-top: 15px;
            border: solid 2px #fff;
            font-size: 20px;
            color: #fff;
            background: 0 0;
            transition: all .3s ease-in-out;
        }

        .btn-outline:hover,
        .btn-outline:focus,
        .btn-outline:active,
        .btn-outline.active {
            border: solid 2px #fff;
            color: #18bc9c;
            background: #fff;
        }

        .floating-label-form-group {
            position: relative;
            margin-bottom: 0;
            padding-bottom: .5em;
            border-bottom: 1px solid #eee;
        }

        .floating-label-form-group input,
        .floating-label-form-group textarea {
            z-index: 1;
            position: relative;
            padding-right: 0;
            padding-left: 0;
            border: 0;
            border-radius: 0;
            font-size: 1.5em;
            background: 0 0;
            box-shadow: none!important;
            resize: none;
        }

        .floating-label-form-group label {
            display: block;
            z-index: 0;
            position: relative;
            top: 2em;
            margin: 0;
            font-size: .85em;
            line-height: 1.764705882em;
            vertical-align: middle;
            vertical-align: baseline;
            opacity: 0;
            -webkit-transition: top .3s ease,opacity .3s ease;
            -moz-transition: top .3s ease,opacity .3s ease;
            -ms-transition: top .3s ease,opacity .3s ease;
            transition: top .3s ease,opacity .3s ease;
        }

        .floating-label-form-group::not(:first-child) {
            padding-left: 14px;
            border-left: 1px solid #eee;
        }

        .floating-label-form-group-with-value label {
            top: 0;
            opacity: 1;
        }

        .floating-label-form-group-with-focus label {
            color: #18bc9c;
        }

        form .row:first-child .floating-label-form-group {
            border-top: 1px solid #eee;
        }

        footer {
            color: #fff;
        }

        footer h3 {
            margin-bottom: 30px;
        }

        footer .footer-above {
            padding-top: 50px;
            background-color: #2c3e50;
        }

        footer .footer-col {
            margin-bottom: 50px;
        }

        footer .footer-below {
            padding: 25px 0;
            background-color: #233140;
        }

        .btn-social {
            display: inline-block;
            width: 50px;
            height: 50px;
            border: 2px solid #fff;
            border-radius: 100%;
            text-align: center;
            font-size: 20px;
            line-height: 45px;
        }

        .btn:focus,
        .btn:active,
        .btn.active {
            outline: 0;
        }

        .scroll-top {
            z-index: 1049;
            position: fixed;
            right: 2%;
            bottom: 2%;
            width: 50px;
            height: 50px;
        }

        .scroll-top .btn {
            width: 50px;
            height: 50px;
            border-radius: 100%;
            font-size: 20px;
            line-height: 28px;
        }

        .scroll-top .btn:focus {
            outline: 0;
        }

        .portfolio-modal .modal-content {
            padding: 100px 0;
            min-height: 100%;
            border: 0;
            border-radius: 0;
            text-align: center;
            background-clip: border-box;
            -webkit-box-shadow: none;
            box-shadow: none;
        }

        .portfolio-modal .modal-content h2 {
            margin: 0;
            font-size: 3em;
        }

        .portfolio-modal .modal-content img {
            margin-bottom: 30px;
        }

        .portfolio-modal .modal-content .item-details {
            margin: 30px 0;
        }

        .portfolio-modal .close-modal {
            position: absolute;
            top: 25px;
            right: 25px;
            width: 75px;
            height: 75px;
            background-color: transparent;
            cursor: pointer;
        }

        .portfolio-modal .close-modal:hover {
            opacity: .3;
        }

        .portfolio-modal .close-modal .lr {
            z-index: 1051;
            width: 1px;
            height: 75px;
            margin-left: 35px;
            background-color: #2c3e50;
            -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
            transform: rotate(45deg);
        }

        .portfolio-modal .close-modal .lr .rl {
            z-index: 1052;
            width: 1px;
            height: 75px;
            background-color: #2c3e50;
            -webkit-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
            transform: rotate(90deg);
        }

        .portfolio-modal .modal-backdrop {
            display: none;
            opacity: 0;
        }

    </style>
    

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

</head>

<body id="page-top" class="index">

    <!-- Navigation -->
    <nav class="navbar navbar-default navbar-fixed-top" style="background-color: #2c3e50; color:white">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header page-scroll">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" style="color:white" href="#page-top">Tim Hall</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li class="hidden">
                        <a href="#page-top"></a>
                    </li>
                    <li class="page-scroll">
                        <a href="#portfolio">Portfolio</a>
                    </li>
                    <li class="page-scroll">
                        <a href="#about">About</a>
                    </li>
                    <li class="page-scroll">
                        <a href="#contact">Contact</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container-fluid -->
    </nav>

    <!-- Header -->
    <header>
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <%= image_tag("profile1.png", class: "img-responsive") %>
                    <!-- <img class="img-responsive" src="/app/assets/images/profile1.png" alt=""> -->
                    <div class="intro-text">
                        <span class="name">Tim Hall</span>
                        <hr class="star-light">
                        <span class="skills">Web Developer</span>
                        <!-- <span class="skills">Web Developer - UX Quality Engineer</span> -->

                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Portfolio Grid Section -->
    <section id="portfolio">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2>Portfolio</h2>
                    <hr class="star-primary">
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal1" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("pack-tracker.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/cabin.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal2" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("cake.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/cake.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal3" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("circus.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/circus.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal4" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("game.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/game.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal5" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("safe.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/safe.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
                <div class="col-sm-4 portfolio-item">
                    <a href="#portfolioModal6" class="portfolio-link" data-toggle="modal">
                        <div class="caption">
                            <div class="caption-content">
                                <i class="fa fa-search-plus fa-3x"></i>
                            </div>
                        </div>
                        <%= image_tag("submarine.png", class: "img-responsive") %>

                        <!-- <img src="img/portfolio/submarine.png" class="img-responsive" alt=""> -->
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section class="success" id="about">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2>About</h2>

                    <hr class="star-light">
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4 col-lg-offset-2">
                    <p style="text-align: center">Growth-minded individual with experience in web and iOS development, consumer electronics, quality assurance, and UX design/validation.  </p>
                </div>
                <!-- <div class="col-lg-4">
                    <p>Growth-minded individual with experience in web development, consumer electronics, and UX design and validation.  </p>
                </div> -->
                <div class="col-lg-8 col-lg-offset-2 text-center">
                    <a href="#" class="btn btn-lg btn-outline">
                        <i class="fa fa-file-pdf-o"></i>&nbsp;&nbsp;Download Resume
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <h2>Contact Me</h2>
                    <hr class="star-primary">
                </div>
            </div>
            <div class="row">

            </div>
            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">
                    <!-- To configure the contact form email address, go to mail/contact_me.php and update the email address in the PHP file on line 19. -->
                    <!-- The form should work on most web servers, but if the form is not working you may need to configure your web server differently. -->
                    <form name="sentMessage" id="contactForm" novalidate>
                        <div class="row control-group">
                            <div class="form-group col-xs-12 floating-label-form-group controls">
                                <label>Name</label>
                                <input type="text" class="form-control" placeholder="Name" id="name" required data-validation-required-message="Please enter your name.">
                                <p class="help-block text-danger"></p>
                            </div>
                        </div>
                        <div class="row control-group">
                            <div class="form-group col-xs-12 floating-label-form-group controls">
                                <label>Email Address</label>
                                <input type="email" class="form-control" placeholder="Email Address" id="email" required data-validation-required-message="Please enter your email address.">
                                <p class="help-block text-danger"></p>
                            </div>
                        </div>
                        <div class="row control-group">
                            <div class="form-group col-xs-12 floating-label-form-group controls">
                                <label>Phone Number</label>
                                <input type="tel" class="form-control" placeholder="Phone Number" id="phone" required data-validation-required-message="Please enter your phone number.">
                                <p class="help-block text-danger"></p>
                            </div>
                        </div>
                        <div class="row control-group">
                            <div class="form-group col-xs-12 floating-label-form-group controls">
                                <label>Message</label>
                                <textarea rows="5" class="form-control" placeholder="Message" id="message" required data-validation-required-message="Please enter a message."></textarea>
                                <p class="help-block text-danger"></p>
                            </div>
                        </div>
                        <br>
                        <div id="success"></div>
                        <div class="row">
                            <div class="form-group col-xs-12">
                                <button type="submit" class="btn btn-success btn-lg">Send</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div> 
    </section>

    <!-- Footer -->
    <footer class="text-center">
        <div class="footer-above">
            <div class="container">
                <div class="row">
                    <div class="footer-col col-md-4">
                        <h3>Location</h3>
                        <p>Los Angeles, CA</p>
                    </div>
                    <div class="footer-col col-md-4">
                        <h3>Around the Web</h3>
                        <ul class="list-inline">
                            
                            
                            <li>
                                <a href="https://github.com/halltim" target="_blank" class="btn-social btn-outline"><i class="fa fa-fw fa-github"></i></a>
                            </li>

                            <li>
                                <a href="http://stackoverflow.com/users/2263871/tim-hall?tab=profile" target="_blank" class="btn-social btn-outline"><i class="fa fa-fw fa-stack-overflow"></i></a>
                            </li>
                            <li>
                                <a href="https://www.linkedin.com/in/halltim1" target="_blank" class="btn-social btn-outline"><i class="fa fa-fw fa-linkedin"></i></a>
                            </li>
                            
                        </ul>
                    </div>
                    <div class="footer-col col-md-4">
                        <h3>Certificates</h3>
                        <p><a href="https://s3.amazonaws.com/verify.edx.org/downloads/b33ea051db214552b8c080968dd25d61/Certificate.pdf" target="_blank">MITx CS - Python</a><br>
                        UW Certified Rails Developer</p>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-below">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        Copyright &nbsp; &copy; &nbsp; Tim Hall 2015
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <!-- Scroll to Top Button (Only visible on small and extra-small screen sizes) -->
    <div class="scroll-top page-scroll visible-xs visible-sm">
        <a class="btn btn-primary" href="#page-top">
            <i class="fa fa-chevron-up"></i>
        </a>
    </div>

    <!-- Portfolio Modals -->
    <div class="portfolio-modal modal fade" id="portfolioModal1" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <!-- <hr class="star-primary"> -->
                            <%= image_tag("pack-tracker.png", class: "img-responsive img-centered") %>
                            <p>PackTracker is a web application developed by <a href="https://github.com/djcroissant/pack_tracker">Derek Covey</a> and myself for the University of Washington Advanced Rails course. PackTracker allows groups of hikers, campers, and travelers to coordinate and track supplies for their upcoming trips.</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://www.pce.uw.edu/certificates/ruby-programming.html" target="_blank">University of Washington</a>
                                    </strong>
                                </li>
                                <li>URL:
                                    <strong><a href="http://pack-tracker.herokuapp.com/" target="_blank">pack-tracker.herokuapp.com</a>
                                    </strong>
                                </li>
                                <li>GitHub:
                                    <strong><a href="https://github.com/djcroissant/pack_tracker" target="_blank">github.com/djcroissant/pack_tracker</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="portfolio-modal modal fade" id="portfolioModal2" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <!-- <hr class="star-primary"> -->
                            <%= image_tag("game.png", class: "img-responsive img-centered") %>

                            <p>Use this area of the page to describe your project. The icon above is part of a free icon set by <a href="https://sellfy.com/p/8Q9P/jV3VZ/">Flat Icons</a>. On their website, you can download their free set with 16 icons, or you can purchase the entire set with 146 icons for only $12!</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://startbootstrap.com">Start Bootstrap</a>
                                    </strong>
                                </li>
                                <li>Date:
                                    <strong><a href="http://startbootstrap.com">April 2014</a>
                                    </strong>
                                </li>
                                <li>Service:
                                    <strong><a href="http://startbootstrap.com">Web Development</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="portfolio-modal modal fade" id="portfolioModal3" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <!-- <hr class="star-primary"> -->
                            <%= image_tag("game.png", class: "img-responsive img-centered") %>

                            <p>Use this area of the page to describe your project. The icon above is part of a free icon set by <a href="https://sellfy.com/p/8Q9P/jV3VZ/">Flat Icons</a>. On their website, you can download their free set with 16 icons, or you can purchase the entire set with 146 icons for only $12!</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://startbootstrap.com">Start Bootstrap</a>
                                    </strong>
                                </li>
                                <li>Date:
                                    <strong><a href="http://startbootstrap.com">April 2014</a>
                                    </strong>
                                </li>
                                <li>Service:
                                    <strong><a href="http://startbootstrap.com">Web Development</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="portfolio-modal modal fade" id="portfolioModal4" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <hr class="star-primary">
                            <%= image_tag("game.png", class: "img-responsive img-centered") %>

                            <p>Use this area of the page to describe your project. The icon above is part of a free icon set by <a href="https://sellfy.com/p/8Q9P/jV3VZ/">Flat Icons</a>. On their website, you can download their free set with 16 icons, or you can purchase the entire set with 146 icons for only $12!</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://startbootstrap.com">Start Bootstrap</a>
                                    </strong>
                                </li>
                                <li>Date:
                                    <strong><a href="http://startbootstrap.com">April 2014</a>
                                    </strong>
                                </li>
                                <li>Service:
                                    <strong><a href="http://startbootstrap.com">Web Development</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="portfolio-modal modal fade" id="portfolioModal5" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <hr class="star-primary">
                            <%= image_tag("game.png", class: "img-responsive img-centered") %>

                            <p>Use this area of the page to describe your project. The icon above is part of a free icon set by <a href="https://sellfy.com/p/8Q9P/jV3VZ/">Flat Icons</a>. On their website, you can download their free set with 16 icons, or you can purchase the entire set with 146 icons for only $12!</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://startbootstrap.com">Start Bootstrap</a>
                                    </strong>
                                </li>
                                <li>Date:
                                    <strong><a href="http://startbootstrap.com">April 2014</a>
                                    </strong>
                                </li>
                                <li>Service:
                                    <strong><a href="http://startbootstrap.com">Web Development</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="portfolio-modal modal fade" id="portfolioModal6" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-content">
            <div class="close-modal" data-dismiss="modal">
                <div class="lr">
                    <div class="rl">
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <div class="modal-body">
                            <h2>Project Title</h2>
                            <hr class="star-primary">
                            <%= image_tag("game.png", class: "img-responsive img-centered") %>

                            <p>Use this area of the page to describe your project. The icon above is part of a free icon set by <a href="https://sellfy.com/p/8Q9P/jV3VZ/">Flat Icons</a>. On their website, you can download their free set with 16 icons, or you can purchase the entire set with 146 icons for only $12!</p>
                            <ul class="list-inline item-details">
                                <li>Client:
                                    <strong><a href="http://startbootstrap.com">Start Bootstrap</a>
                                    </strong>
                                </li>
                                <li>Date:
                                    <strong><a href="http://startbootstrap.com">April 2014</a>
                                    </strong>
                                </li>
                                <li>Service:
                                    <strong><a href="http://startbootstrap.com">Web Development</a>
                                    </strong>
                                </li>
                            </ul>
                            <button type="button" class="btn btn-default" data-dismiss="modal"><i class="fa fa-times"></i> Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(function() {

            $("input,textarea").jqBootstrapValidation({
                preventSubmit: true,
                submitError: function($form, event, errors) {
                    // additional error messages or events
                },
                submitSuccess: function($form, event) {
                    // Prevent spam click and default submit behaviour
                    $("#btnSubmit").attr("disabled", true);
                    event.preventDefault();
                    
                    // get values from FORM
                    var name = $("input#name").val();
                    var email = $("input#email").val();
                    var phone = $("input#phone").val();
                    var message = $("textarea#message").val();
                    var firstName = name; // For Success/Failure Message
                    // Check for white space in name for Success/Fail message
                    if (firstName.indexOf(' ') >= 0) {
                        firstName = name.split(' ').slice(0, -1).join(' ');
                    }
                    $.ajax({
                        // url: "http://localhost/mail/contact_me.php",
                        url: "././contact_me",
                        type: "POST",
                        data: {
                            name: name,
                            phone: phone,
                            email: email,
                            message: message
                        },
                        cache: false,
                        success: function() {
                            // Enable button & show success message
                            $("#btnSubmit").attr("disabled", false);
                            $('#success').html("<div class='alert alert-success'>");
                            $('#success > .alert-success').html("<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;")
                                .append("</button>");
                            $('#success > .alert-success')
                                .append("<strong>Your message has been sent. </strong>");
                            $('#success > .alert-success')
                                .append('</div>');

                            //clear all fields
                            $('#contactForm').trigger("reset");
                        },
                        error: function() {
                            // Fail message
                            $('#success').html("<div class='alert alert-danger'>");
                            $('#success > .alert-danger').html("<button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;")
                                .append("</button>");
                            $('#success > .alert-danger').append("<strong>Sorry " + firstName + ", it seems that my mail server is not responding. Please try again later!");
                            $('#success > .alert-danger').append('</div>');
                            //clear all fields
                            $('#contactForm').trigger("reset");
                        },
                    })
                },
                filter: function() {
                    return $(this).is(":visible");
                },
            });

            $("a[data-toggle=\"tab\"]").click(function(e) {
                e.preventDefault();
                $(this).tab("show");
            });
        });

        // When clicking on Full hide fail/success boxes
        $('#name').focus(function() {
            $('#success').html('');
        });

    </script>

    <script>
        /*!
         * Start Bootstrap - Freelancer Bootstrap Theme (http://startbootstrap.com)
         * Code licensed under the Apache License v2.0.
         * For details, see http://www.apache.org/licenses/LICENSE-2.0.
         */

        // jQuery for page scrolling feature - requires jQuery Easing plugin
        $(function() {
            $('body').on('click', '.page-scroll a', function(event) {
                var $anchor = $(this);
                $('html, body').stop().animate({
                    scrollTop: $($anchor.attr('href')).offset().top
                }, 1500, 'easeInOutExpo');
                event.preventDefault();
            });
        });

        // Floating label headings for the contact form
        $(function() {
            $("body").on("input propertychange", ".floating-label-form-group", function(e) {
                $(this).toggleClass("floating-label-form-group-with-value", !! $(e.target).val());
            }).on("focus", ".floating-label-form-group", function() {
                $(this).addClass("floating-label-form-group-with-focus");
            }).on("blur", ".floating-label-form-group", function() {
                $(this).removeClass("floating-label-form-group-with-focus");
            });
        });

        // Highlight the top nav as scrolling occurs
        $('body').scrollspy({
            target: '.navbar-fixed-top'
        })

        // Closes the Responsive Menu on Menu Item Click
        $('.navbar-collapse ul li a').click(function() {
            $('.navbar-toggle:visible').click();
        });

    </script>

    <script>
        /**
         * cbpAnimatedHeader.js v1.0.0
         * http://www.codrops.com
         *
         * Licensed under the MIT license.
         * http://www.opensource.org/licenses/mit-license.php
         * 
         * Copyright 2013, Codrops
         * http://www.codrops.com
         */
        var cbpAnimatedHeader = (function() {

            var docElem = document.documentElement,
                header = document.querySelector( '.navbar-fixed-top' ),
                didScroll = false,
                changeHeaderOn = 300;

            function init() {
                window.addEventListener( 'scroll', function( event ) {
                    if( !didScroll ) {
                        didScroll = true;
                        setTimeout( scrollPage, 250 );
                    }
                }, false );
            }

            function scrollPage() {
                var sy = scrollY();
                if ( sy >= changeHeaderOn ) {
                    classie.add( header, 'navbar-shrink' );
                }
                else {
                    classie.remove( header, 'navbar-shrink' );
                }
                didScroll = false;
            }

            function scrollY() {
                return window.pageYOffset || docElem.scrollTop;
            }

            init();

        })();

    </script>

    <script>
        /*!
         * classie - class helper functions
         * from bonzo https://github.com/ded/bonzo
         * 
         * classie.has( elem, 'my-class' ) -> true/false
         * classie.add( elem, 'my-new-class' )
         * classie.remove( elem, 'my-unwanted-class' )
         * classie.toggle( elem, 'my-class' )
         */

        /*jshint browser: true, strict: true, undef: true */
        /*global define: false */

        ( function( window ) {

        'use strict';

        // class helper functions from bonzo https://github.com/ded/bonzo

        function classReg( className ) {
          return new RegExp("(^|\\s+)" + className + "(\\s+|$)");
        }

        // classList support for class management
        // altho to be fair, the api sucks because it won't accept multiple classes at once
        var hasClass, addClass, removeClass;

        if ( 'classList' in document.documentElement ) {
          hasClass = function( elem, c ) {
            return elem.classList.contains( c );
          };
          addClass = function( elem, c ) {
            elem.classList.add( c );
          };
          removeClass = function( elem, c ) {
            elem.classList.remove( c );
          };
        }
        else {
          hasClass = function( elem, c ) {
            return classReg( c ).test( elem.className );
          };
          addClass = function( elem, c ) {
            if ( !hasClass( elem, c ) ) {
              elem.className = elem.className + ' ' + c;
            }
          };
          removeClass = function( elem, c ) {
            elem.className = elem.className.replace( classReg( c ), ' ' );
          };
        }

        function toggleClass( elem, c ) {
          var fn = hasClass( elem, c ) ? removeClass : addClass;
          fn( elem, c );
        }

        var classie = {
          // full names
          hasClass: hasClass,
          addClass: addClass,
          removeClass: removeClass,
          toggleClass: toggleClass,
          // short names
          has: hasClass,
          add: addClass,
          remove: removeClass,
          toggle: toggleClass
        };

        // transport
        if ( typeof define === 'function' && define.amd ) {
          // AMD
          define( classie );
        } else {
          // browser global
          window.classie = classie;
        }

        })( window );

    </script>

    <script>
        /* jqBootstrapValidation
         * A plugin for automating validation on Twitter Bootstrap formatted forms.
         *
         * v1.3.6
         *
         * License: MIT <http://opensource.org/licenses/mit-license.php> - see LICENSE file
         *
         * http://ReactiveRaven.github.com/jqBootstrapValidation/
         */

        (function( $ ){

            var createdElements = [];

            var defaults = {
                options: {
                    prependExistingHelpBlock: false,
                    sniffHtml: true, // sniff for 'required', 'maxlength', etc
                    preventSubmit: true, // stop the form submit event from firing if validation fails
                    submitError: false, // function called if there is an error when trying to submit
                    submitSuccess: false, // function called just before a successful submit event is sent to the server
                    semanticallyStrict: false, // set to true to tidy up generated HTML output
                    autoAdd: {
                        helpBlocks: true
                    },
                    filter: function () {
                        // return $(this).is(":visible"); // only validate elements you can see
                        return true; // validate everything
                    }
                },
            methods: {
              init : function( options ) {

                var settings = $.extend(true, {}, defaults);

                settings.options = $.extend(true, settings.options, options);

                var $siblingElements = this;

                var uniqueForms = $.unique(
                  $siblingElements.map( function () {
                    return $(this).parents("form")[0];
                  }).toArray()
                );

                $(uniqueForms).bind("submit", function (e) {
                  var $form = $(this);
                  var warningsFound = 0;
                  var $inputs = $form.find("input,textarea,select").not("[type=submit],[type=image]").filter(settings.options.filter);
                  $inputs.trigger("submit.validation").trigger("validationLostFocus.validation");

                  $inputs.each(function (i, el) {
                    var $this = $(el),
                      $controlGroup = $this.parents(".control-group").first();
                    if (
                      $controlGroup.hasClass("warning")
                    ) {
                      $controlGroup.removeClass("warning").addClass("error");
                      warningsFound++;
                    }
                  });

                  $inputs.trigger("validationLostFocus.validation");

                  if (warningsFound) {
                    if (settings.options.preventSubmit) {
                      e.preventDefault();
                    }
                    $form.addClass("error");
                    if ($.isFunction(settings.options.submitError)) {
                      settings.options.submitError($form, e, $inputs.jqBootstrapValidation("collectErrors", true));
                    }
                  } else {
                    $form.removeClass("error");
                    if ($.isFunction(settings.options.submitSuccess)) {
                      settings.options.submitSuccess($form, e);
                    }
                  }
                });

                return this.each(function(){

                  // Get references to everything we're interested in
                  var $this = $(this),
                    $controlGroup = $this.parents(".control-group").first(),
                    $helpBlock = $controlGroup.find(".help-block").first(),
                    $form = $this.parents("form").first(),
                    validatorNames = [];

                  // create message container if not exists
                  if (!$helpBlock.length && settings.options.autoAdd && settings.options.autoAdd.helpBlocks) {
                      $helpBlock = $('<div class="help-block" />');
                      $controlGroup.find('.controls').append($helpBlock);
                                    createdElements.push($helpBlock[0]);
                  }

                  // =============================================================
                  //                                     SNIFF HTML FOR VALIDATORS
                  // =============================================================

                  // *snort sniff snuffle*

                  if (settings.options.sniffHtml) {
                    var message = "";
                    // ---------------------------------------------------------
                    //                                                   PATTERN
                    // ---------------------------------------------------------
                    if ($this.attr("pattern") !== undefined) {
                      message = "Not in the expected format<!-- data-validation-pattern-message to override -->";
                      if ($this.data("validationPatternMessage")) {
                        message = $this.data("validationPatternMessage");
                      }
                      $this.data("validationPatternMessage", message);
                      $this.data("validationPatternRegex", $this.attr("pattern"));
                    }
                    // ---------------------------------------------------------
                    //                                                       MAX
                    // ---------------------------------------------------------
                    if ($this.attr("max") !== undefined || $this.attr("aria-valuemax") !== undefined) {
                      var max = ($this.attr("max") !== undefined ? $this.attr("max") : $this.attr("aria-valuemax"));
                      message = "Too high: Maximum of '" + max + "'<!-- data-validation-max-message to override -->";
                      if ($this.data("validationMaxMessage")) {
                        message = $this.data("validationMaxMessage");
                      }
                      $this.data("validationMaxMessage", message);
                      $this.data("validationMaxMax", max);
                    }
                    // ---------------------------------------------------------
                    //                                                       MIN
                    // ---------------------------------------------------------
                    if ($this.attr("min") !== undefined || $this.attr("aria-valuemin") !== undefined) {
                      var min = ($this.attr("min") !== undefined ? $this.attr("min") : $this.attr("aria-valuemin"));
                      message = "Too low: Minimum of '" + min + "'<!-- data-validation-min-message to override -->";
                      if ($this.data("validationMinMessage")) {
                        message = $this.data("validationMinMessage");
                      }
                      $this.data("validationMinMessage", message);
                      $this.data("validationMinMin", min);
                    }
                    // ---------------------------------------------------------
                    //                                                 MAXLENGTH
                    // ---------------------------------------------------------
                    if ($this.attr("maxlength") !== undefined) {
                      message = "Too long: Maximum of '" + $this.attr("maxlength") + "' characters<!-- data-validation-maxlength-message to override -->";
                      if ($this.data("validationMaxlengthMessage")) {
                        message = $this.data("validationMaxlengthMessage");
                      }
                      $this.data("validationMaxlengthMessage", message);
                      $this.data("validationMaxlengthMaxlength", $this.attr("maxlength"));
                    }
                    // ---------------------------------------------------------
                    //                                                 MINLENGTH
                    // ---------------------------------------------------------
                    if ($this.attr("minlength") !== undefined) {
                      message = "Too short: Minimum of '" + $this.attr("minlength") + "' characters<!-- data-validation-minlength-message to override -->";
                      if ($this.data("validationMinlengthMessage")) {
                        message = $this.data("validationMinlengthMessage");
                      }
                      $this.data("validationMinlengthMessage", message);
                      $this.data("validationMinlengthMinlength", $this.attr("minlength"));
                    }
                    // ---------------------------------------------------------
                    //                                                  REQUIRED
                    // ---------------------------------------------------------
                    if ($this.attr("required") !== undefined || $this.attr("aria-required") !== undefined) {
                      message = settings.builtInValidators.required.message;
                      if ($this.data("validationRequiredMessage")) {
                        message = $this.data("validationRequiredMessage");
                      }
                      $this.data("validationRequiredMessage", message);
                    }
                    // ---------------------------------------------------------
                    //                                                    NUMBER
                    // ---------------------------------------------------------
                    if ($this.attr("type") !== undefined && $this.attr("type").toLowerCase() === "number") {
                      message = settings.builtInValidators.number.message;
                      if ($this.data("validationNumberMessage")) {
                        message = $this.data("validationNumberMessage");
                      }
                      $this.data("validationNumberMessage", message);
                    }
                    // ---------------------------------------------------------
                    //                                                     EMAIL
                    // ---------------------------------------------------------
                    if ($this.attr("type") !== undefined && $this.attr("type").toLowerCase() === "email") {
                      message = "Not a valid email address<!-- data-validator-validemail-message to override -->";
                      if ($this.data("validationValidemailMessage")) {
                        message = $this.data("validationValidemailMessage");
                      } else if ($this.data("validationEmailMessage")) {
                        message = $this.data("validationEmailMessage");
                      }
                      $this.data("validationValidemailMessage", message);
                    }
                    // ---------------------------------------------------------
                    //                                                MINCHECKED
                    // ---------------------------------------------------------
                    if ($this.attr("minchecked") !== undefined) {
                      message = "Not enough options checked; Minimum of '" + $this.attr("minchecked") + "' required<!-- data-validation-minchecked-message to override -->";
                      if ($this.data("validationMincheckedMessage")) {
                        message = $this.data("validationMincheckedMessage");
                      }
                      $this.data("validationMincheckedMessage", message);
                      $this.data("validationMincheckedMinchecked", $this.attr("minchecked"));
                    }
                    // ---------------------------------------------------------
                    //                                                MAXCHECKED
                    // ---------------------------------------------------------
                    if ($this.attr("maxchecked") !== undefined) {
                      message = "Too many options checked; Maximum of '" + $this.attr("maxchecked") + "' required<!-- data-validation-maxchecked-message to override -->";
                      if ($this.data("validationMaxcheckedMessage")) {
                        message = $this.data("validationMaxcheckedMessage");
                      }
                      $this.data("validationMaxcheckedMessage", message);
                      $this.data("validationMaxcheckedMaxchecked", $this.attr("maxchecked"));
                    }
                  }

                  // =============================================================
                  //                                       COLLECT VALIDATOR NAMES
                  // =============================================================

                  // Get named validators
                  if ($this.data("validation") !== undefined) {
                    validatorNames = $this.data("validation").split(",");
                  }

                  // Get extra ones defined on the element's data attributes
                  $.each($this.data(), function (i, el) {
                    var parts = i.replace(/([A-Z])/g, ",$1").split(",");
                    if (parts[0] === "validation" && parts[1]) {
                      validatorNames.push(parts[1]);
                    }
                  });

                  // =============================================================
                  //                                     NORMALISE VALIDATOR NAMES
                  // =============================================================

                  var validatorNamesToInspect = validatorNames;
                  var newValidatorNamesToInspect = [];

                  do // repeatedly expand 'shortcut' validators into their real validators
                  {
                    // Uppercase only the first letter of each name
                    $.each(validatorNames, function (i, el) {
                      validatorNames[i] = formatValidatorName(el);
                    });

                    // Remove duplicate validator names
                    validatorNames = $.unique(validatorNames);

                    // Pull out the new validator names from each shortcut
                    newValidatorNamesToInspect = [];
                    $.each(validatorNamesToInspect, function(i, el) {
                      if ($this.data("validation" + el + "Shortcut") !== undefined) {
                        // Are these custom validators?
                        // Pull them out!
                        $.each($this.data("validation" + el + "Shortcut").split(","), function(i2, el2) {
                          newValidatorNamesToInspect.push(el2);
                        });
                      } else if (settings.builtInValidators[el.toLowerCase()]) {
                        // Is this a recognised built-in?
                        // Pull it out!
                        var validator = settings.builtInValidators[el.toLowerCase()];
                        if (validator.type.toLowerCase() === "shortcut") {
                          $.each(validator.shortcut.split(","), function (i, el) {
                            el = formatValidatorName(el);
                            newValidatorNamesToInspect.push(el);
                            validatorNames.push(el);
                          });
                        }
                      }
                    });

                    validatorNamesToInspect = newValidatorNamesToInspect;

                  } while (validatorNamesToInspect.length > 0)

                  // =============================================================
                  //                                       SET UP VALIDATOR ARRAYS
                  // =============================================================

                  var validators = {};

                  $.each(validatorNames, function (i, el) {
                    // Set up the 'override' message
                    var message = $this.data("validation" + el + "Message");
                    var hasOverrideMessage = (message !== undefined);
                    var foundValidator = false;
                    message =
                      (
                        message
                          ? message
                          : "'" + el + "' validation failed <!-- Add attribute 'data-validation-" + el.toLowerCase() + "-message' to input to change this message -->"
                      )
                    ;

                    $.each(
                      settings.validatorTypes,
                      function (validatorType, validatorTemplate) {
                        if (validators[validatorType] === undefined) {
                          validators[validatorType] = [];
                        }
                        if (!foundValidator && $this.data("validation" + el + formatValidatorName(validatorTemplate.name)) !== undefined) {
                          validators[validatorType].push(
                            $.extend(
                              true,
                              {
                                name: formatValidatorName(validatorTemplate.name),
                                message: message
                              },
                              validatorTemplate.init($this, el)
                            )
                          );
                          foundValidator = true;
                        }
                      }
                    );

                    if (!foundValidator && settings.builtInValidators[el.toLowerCase()]) {

                      var validator = $.extend(true, {}, settings.builtInValidators[el.toLowerCase()]);
                      if (hasOverrideMessage) {
                        validator.message = message;
                      }
                      var validatorType = validator.type.toLowerCase();

                      if (validatorType === "shortcut") {
                        foundValidator = true;
                      } else {
                        $.each(
                          settings.validatorTypes,
                          function (validatorTemplateType, validatorTemplate) {
                            if (validators[validatorTemplateType] === undefined) {
                              validators[validatorTemplateType] = [];
                            }
                            if (!foundValidator && validatorType === validatorTemplateType.toLowerCase()) {
                              $this.data("validation" + el + formatValidatorName(validatorTemplate.name), validator[validatorTemplate.name.toLowerCase()]);
                              validators[validatorType].push(
                                $.extend(
                                  validator,
                                  validatorTemplate.init($this, el)
                                )
                              );
                              foundValidator = true;
                            }
                          }
                        );
                      }
                    }

                    if (! foundValidator) {
                      $.error("Cannot find validation info for '" + el + "'");
                    }
                  });

                  // =============================================================
                  //                                         STORE FALLBACK VALUES
                  // =============================================================

                  $helpBlock.data(
                    "original-contents",
                    (
                      $helpBlock.data("original-contents")
                        ? $helpBlock.data("original-contents")
                        : $helpBlock.html()
                    )
                  );

                  $helpBlock.data(
                    "original-role",
                    (
                      $helpBlock.data("original-role")
                        ? $helpBlock.data("original-role")
                        : $helpBlock.attr("role")
                    )
                  );

                  $controlGroup.data(
                    "original-classes",
                    (
                      $controlGroup.data("original-clases")
                        ? $controlGroup.data("original-classes")
                        : $controlGroup.attr("class")
                    )
                  );

                  $this.data(
                    "original-aria-invalid",
                    (
                      $this.data("original-aria-invalid")
                        ? $this.data("original-aria-invalid")
                        : $this.attr("aria-invalid")
                    )
                  );

                  // =============================================================
                  //                                                    VALIDATION
                  // =============================================================

                  $this.bind(
                    "validation.validation",
                    function (event, params) {

                      var value = getValue($this);

                      // Get a list of the errors to apply
                      var errorsFound = [];

                      $.each(validators, function (validatorType, validatorTypeArray) {
                        if (value || value.length || (params && params.includeEmpty) || (!!settings.validatorTypes[validatorType].blockSubmit && params && !!params.submitting)) {
                          $.each(validatorTypeArray, function (i, validator) {
                            if (settings.validatorTypes[validatorType].validate($this, value, validator)) {
                              errorsFound.push(validator.message);
                            }
                          });
                        }
                      });

                      return errorsFound;
                    }
                  );

                  $this.bind(
                    "getValidators.validation",
                    function () {
                      return validators;
                    }
                  );

                  // =============================================================
                  //                                             WATCH FOR CHANGES
                  // =============================================================
                  $this.bind(
                    "submit.validation",
                    function () {
                      return $this.triggerHandler("change.validation", {submitting: true});
                    }
                  );
                  $this.bind(
                    [
                      "keyup",
                      "focus",
                      "blur",
                      "click",
                      "keydown",
                      "keypress",
                      "change"
                    ].join(".validation ") + ".validation",
                    function (e, params) {

                      var value = getValue($this);

                      var errorsFound = [];

                      $controlGroup.find("input,textarea,select").each(function (i, el) {
                        var oldCount = errorsFound.length;
                        $.each($(el).triggerHandler("validation.validation", params), function (j, message) {
                          errorsFound.push(message);
                        });
                        if (errorsFound.length > oldCount) {
                          $(el).attr("aria-invalid", "true");
                        } else {
                          var original = $this.data("original-aria-invalid");
                          $(el).attr("aria-invalid", (original !== undefined ? original : false));
                        }
                      });

                      $form.find("input,select,textarea").not($this).not("[name=\"" + $this.attr("name") + "\"]").trigger("validationLostFocus.validation");

                      errorsFound = $.unique(errorsFound.sort());

                      // Were there any errors?
                      if (errorsFound.length) {
                        // Better flag it up as a warning.
                        $controlGroup.removeClass("success error").addClass("warning");

                        // How many errors did we find?
                        if (settings.options.semanticallyStrict && errorsFound.length === 1) {
                          // Only one? Being strict? Just output it.
                          $helpBlock.html(errorsFound[0] + 
                            ( settings.options.prependExistingHelpBlock ? $helpBlock.data("original-contents") : "" ));
                        } else {
                          // Multiple? Being sloppy? Glue them together into an UL.
                          $helpBlock.html("<ul role=\"alert\"><li>" + errorsFound.join("</li><li>") + "</li></ul>" +
                            ( settings.options.prependExistingHelpBlock ? $helpBlock.data("original-contents") : "" ));
                        }
                      } else {
                        $controlGroup.removeClass("warning error success");
                        if (value.length > 0) {
                          $controlGroup.addClass("success");
                        }
                        $helpBlock.html($helpBlock.data("original-contents"));
                      }

                      if (e.type === "blur") {
                        $controlGroup.removeClass("success");
                      }
                    }
                  );
                  $this.bind("validationLostFocus.validation", function () {
                    $controlGroup.removeClass("success");
                  });
                });
              },
              destroy : function( ) {

                return this.each(
                  function() {

                    var
                      $this = $(this),
                      $controlGroup = $this.parents(".control-group").first(),
                      $helpBlock = $controlGroup.find(".help-block").first();

                    // remove our events
                    $this.unbind('.validation'); // events are namespaced.
                    // reset help text
                    $helpBlock.html($helpBlock.data("original-contents"));
                    // reset classes
                    $controlGroup.attr("class", $controlGroup.data("original-classes"));
                    // reset aria
                    $this.attr("aria-invalid", $this.data("original-aria-invalid"));
                    // reset role
                    $helpBlock.attr("role", $this.data("original-role"));
                                // remove all elements we created
                                if (createdElements.indexOf($helpBlock[0]) > -1) {
                                    $helpBlock.remove();
                                }

                  }
                );

              },
              collectErrors : function(includeEmpty) {

                var errorMessages = {};
                this.each(function (i, el) {
                  var $el = $(el);
                  var name = $el.attr("name");
                  var errors = $el.triggerHandler("validation.validation", {includeEmpty: true});
                  errorMessages[name] = $.extend(true, errors, errorMessages[name]);
                });

                $.each(errorMessages, function (i, el) {
                  if (el.length === 0) {
                    delete errorMessages[i];
                  }
                });

                return errorMessages;

              },
              hasErrors: function() {

                var errorMessages = [];

                this.each(function (i, el) {
                  errorMessages = errorMessages.concat(
                    $(el).triggerHandler("getValidators.validation") ? $(el).triggerHandler("validation.validation", {submitting: true}) : []
                  );
                });

                return (errorMessages.length > 0);
              },
              override : function (newDefaults) {
                defaults = $.extend(true, defaults, newDefaults);
              }
            },
                validatorTypes: {
              callback: {
                name: "callback",
                init: function ($this, name) {
                  return {
                    validatorName: name,
                    callback: $this.data("validation" + name + "Callback"),
                    lastValue: $this.val(),
                    lastValid: true,
                    lastFinished: true
                  };
                },
                validate: function ($this, value, validator) {
                  if (validator.lastValue === value && validator.lastFinished) {
                    return !validator.lastValid;
                  }

                  if (validator.lastFinished === true)
                  {
                    validator.lastValue = value;
                    validator.lastValid = true;
                    validator.lastFinished = false;

                    var rrjqbvValidator = validator;
                    var rrjqbvThis = $this;
                    executeFunctionByName(
                      validator.callback,
                      window,
                      $this,
                      value,
                      function (data) {
                        if (rrjqbvValidator.lastValue === data.value) {
                          rrjqbvValidator.lastValid = data.valid;
                          if (data.message) {
                            rrjqbvValidator.message = data.message;
                          }
                          rrjqbvValidator.lastFinished = true;
                          rrjqbvThis.data("validation" + rrjqbvValidator.validatorName + "Message", rrjqbvValidator.message);
                          // Timeout is set to avoid problems with the events being considered 'already fired'
                          setTimeout(function () {
                            rrjqbvThis.trigger("change.validation");
                          }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst
                        }
                      }
                    );
                  }

                  return false;

                }
              },
              ajax: {
                name: "ajax",
                init: function ($this, name) {
                  return {
                    validatorName: name,
                    url: $this.data("validation" + name + "Ajax"),
                    lastValue: $this.val(),
                    lastValid: true,
                    lastFinished: true
                  };
                },
                validate: function ($this, value, validator) {
                  if (""+validator.lastValue === ""+value && validator.lastFinished === true) {
                    return validator.lastValid === false;
                  }

                  if (validator.lastFinished === true)
                  {
                    validator.lastValue = value;
                    validator.lastValid = true;
                    validator.lastFinished = false;
                    $.ajax({
                      url: validator.url,
                      data: "value=" + value + "&field=" + $this.attr("name"),
                      dataType: "json",
                      success: function (data) {
                        if (""+validator.lastValue === ""+data.value) {
                          validator.lastValid = !!(data.valid);
                          if (data.message) {
                            validator.message = data.message;
                          }
                          validator.lastFinished = true;
                          $this.data("validation" + validator.validatorName + "Message", validator.message);
                          // Timeout is set to avoid problems with the events being considered 'already fired'
                          setTimeout(function () {
                            $this.trigger("change.validation");
                          }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst
                        }
                      },
                      failure: function () {
                        validator.lastValid = true;
                        validator.message = "ajax call failed";
                        validator.lastFinished = true;
                        $this.data("validation" + validator.validatorName + "Message", validator.message);
                        // Timeout is set to avoid problems with the events being considered 'already fired'
                        setTimeout(function () {
                          $this.trigger("change.validation");
                        }, 1); // doesn't need a long timeout, just long enough for the event bubble to burst
                      }
                    });
                  }

                  return false;

                }
              },
                    regex: {
                        name: "regex",
                        init: function ($this, name) {
                            return {regex: regexFromString($this.data("validation" + name + "Regex"))};
                        },
                        validate: function ($this, value, validator) {
                            return (!validator.regex.test(value) && ! validator.negative)
                                || (validator.regex.test(value) && validator.negative);
                        }
                    },
                    required: {
                        name: "required",
                        init: function ($this, name) {
                            return {};
                        },
                        validate: function ($this, value, validator) {
                            return !!(value.length === 0  && ! validator.negative)
                                || !!(value.length > 0 && validator.negative);
                        },
                blockSubmit: true
                    },
                    match: {
                        name: "match",
                        init: function ($this, name) {
                            var element = $this.parents("form").first().find("[name=\"" + $this.data("validation" + name + "Match") + "\"]").first();
                            element.bind("validation.validation", function () {
                                $this.trigger("change.validation", {submitting: true});
                            });
                            return {"element": element};
                        },
                        validate: function ($this, value, validator) {
                            return (value !== validator.element.val() && ! validator.negative)
                                || (value === validator.element.val() && validator.negative);
                        },
                blockSubmit: true
                    },
                    max: {
                        name: "max",
                        init: function ($this, name) {
                            return {max: $this.data("validation" + name + "Max")};
                        },
                        validate: function ($this, value, validator) {
                            return (parseFloat(value, 10) > parseFloat(validator.max, 10) && ! validator.negative)
                                || (parseFloat(value, 10) <= parseFloat(validator.max, 10) && validator.negative);
                        }
                    },
                    min: {
                        name: "min",
                        init: function ($this, name) {
                            return {min: $this.data("validation" + name + "Min")};
                        },
                        validate: function ($this, value, validator) {
                            return (parseFloat(value) < parseFloat(validator.min) && ! validator.negative)
                                || (parseFloat(value) >= parseFloat(validator.min) && validator.negative);
                        }
                    },
                    maxlength: {
                        name: "maxlength",
                        init: function ($this, name) {
                            return {maxlength: $this.data("validation" + name + "Maxlength")};
                        },
                        validate: function ($this, value, validator) {
                            return ((value.length > validator.maxlength) && ! validator.negative)
                                || ((value.length <= validator.maxlength) && validator.negative);
                        }
                    },
                    minlength: {
                        name: "minlength",
                        init: function ($this, name) {
                            return {minlength: $this.data("validation" + name + "Minlength")};
                        },
                        validate: function ($this, value, validator) {
                            return ((value.length < validator.minlength) && ! validator.negative)
                                || ((value.length >= validator.minlength) && validator.negative);
                        }
                    },
                    maxchecked: {
                        name: "maxchecked",
                        init: function ($this, name) {
                            var elements = $this.parents("form").first().find("[name=\"" + $this.attr("name") + "\"]");
                            elements.bind("click.validation", function () {
                                $this.trigger("change.validation", {includeEmpty: true});
                            });
                            return {maxchecked: $this.data("validation" + name + "Maxchecked"), elements: elements};
                        },
                        validate: function ($this, value, validator) {
                            return (validator.elements.filter(":checked").length > validator.maxchecked && ! validator.negative)
                                || (validator.elements.filter(":checked").length <= validator.maxchecked && validator.negative);
                        },
                blockSubmit: true
                    },
                    minchecked: {
                        name: "minchecked",
                        init: function ($this, name) {
                            var elements = $this.parents("form").first().find("[name=\"" + $this.attr("name") + "\"]");
                            elements.bind("click.validation", function () {
                                $this.trigger("change.validation", {includeEmpty: true});
                            });
                            return {minchecked: $this.data("validation" + name + "Minchecked"), elements: elements};
                        },
                        validate: function ($this, value, validator) {
                            return (validator.elements.filter(":checked").length < validator.minchecked && ! validator.negative)
                                || (validator.elements.filter(":checked").length >= validator.minchecked && validator.negative);
                        },
                blockSubmit: true
                    }
                },
                builtInValidators: {
                    email: {
                        name: "Email",
                        type: "shortcut",
                        shortcut: "validemail"
                    },
                    validemail: {
                        name: "Validemail",
                        type: "regex",
                        regex: "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\.[A-Za-z]{2,4}",
                        message: "Not a valid email address<!-- data-validator-validemail-message to override -->"
                    },
                    passwordagain: {
                        name: "Passwordagain",
                        type: "match",
                        match: "password",
                        message: "Does not match the given password<!-- data-validator-paswordagain-message to override -->"
                    },
                    positive: {
                        name: "Positive",
                        type: "shortcut",
                        shortcut: "number,positivenumber"
                    },
                    negative: {
                        name: "Negative",
                        type: "shortcut",
                        shortcut: "number,negativenumber"
                    },
                    number: {
                        name: "Number",
                        type: "regex",
                        regex: "([+-]?\\\d+(\\\.\\\d*)?([eE][+-]?[0-9]+)?)?",
                        message: "Must be a number<!-- data-validator-number-message to override -->"
                    },
                    integer: {
                        name: "Integer",
                        type: "regex",
                        regex: "[+-]?\\\d+",
                        message: "No decimal places allowed<!-- data-validator-integer-message to override -->"
                    },
                    positivenumber: {
                        name: "Positivenumber",
                        type: "min",
                        min: 0,
                        message: "Must be a positive number<!-- data-validator-positivenumber-message to override -->"
                    },
                    negativenumber: {
                        name: "Negativenumber",
                        type: "max",
                        max: 0,
                        message: "Must be a negative number<!-- data-validator-negativenumber-message to override -->"
                    },
                    required: {
                        name: "Required",
                        type: "required",
                        message: "This is required<!-- data-validator-required-message to override -->"
                    },
                    checkone: {
                        name: "Checkone",
                        type: "minchecked",
                        minchecked: 1,
                        message: "Check at least one option<!-- data-validation-checkone-message to override -->"
                    }
                }
            };

            var formatValidatorName = function (name) {
                return name
                    .toLowerCase()
                    .replace(
                        /(^|\s)([a-z])/g ,
                        function(m,p1,p2) {
                            return p1+p2.toUpperCase();
                        }
                    )
                ;
            };

            var getValue = function ($this) {
                // Extract the value we're talking about
                var value = $this.val();
                var type = $this.attr("type");
                if (type === "checkbox") {
                    value = ($this.is(":checked") ? value : "");
                }
                if (type === "radio") {
                    value = ($('input[name="' + $this.attr("name") + '"]:checked').length > 0 ? value : "");
                }
                return value;
            };

          function regexFromString(inputstring) {
                return new RegExp("^" + inputstring + "$");
            }

          /**
           * Thanks to Jason Bunting via StackOverflow.com
           *
           * http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string#answer-359910
           * Short link: http://tinyurl.com/executeFunctionByName
          **/
          function executeFunctionByName(functionName, context /*, args*/) {
            var args = Array.prototype.slice.call(arguments).splice(2);
            var namespaces = functionName.split(".");
            var func = namespaces.pop();
            for(var i = 0; i < namespaces.length; i++) {
              context = context[namespaces[i]];
            }
            return context[func].apply(this, args);
          }

            $.fn.jqBootstrapValidation = function( method ) {

                if ( defaults.methods[method] ) {
                    return defaults.methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ));
                } else if ( typeof method === 'object' || ! method ) {
                    return defaults.methods.init.apply( this, arguments );
                } else {
                $.error( 'Method ' +  method + ' does not exist on jQuery.jqBootstrapValidation' );
                    return null;
                }

            };

          $.jqBootstrapValidation = function (options) {
            $(":input").not("[type=image],[type=submit]").jqBootstrapValidation.apply(this,arguments);
          };

        })( jQuery );

    </script>

    <!-- jQuery -->
    <!-- <script src="js/jquery.js"></script> -->

    <!-- Bootstrap Core JavaScript -->
    <!-- <script src="js/bootstrap.min.js"></script> -->

    <!-- Plugin JavaScript -->
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js">
    </script>
    
</body>

</html>
